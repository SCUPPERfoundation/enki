job "name" {

  datacenters = ["dc1"]

  type = "service"

  update {

    stagger      = "30s"

    max_parallel = 1

  }

  group "name" {

    count = {{ key "name-generator-count" }}

    task "name" {

      driver = "docker"

      config {
        image = "eschudt/name-generator:{{ key "name-generator-version" }}"
        advertise_ipv6_address = false
        args = [
          "-bind", "${NOMAD_PORT_http}",
        ]
      }

      env {
        "AGE_SERVICE_URL" = "http://172.17.0.1:${NOMAD_PORT_proxy_http}",
        "API_KEY" = "{{with secret "secret/my_api_key"}}{{.Data.my_api_key}}{{end}}"
      }

      service {

        name = "name"

        port = "http"

        tags = ["urlprefix-/names strip=/names"]

        check {
          type     = "http"
          name	   = "name"
          path     = "/"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 250 # MHz
        memory = 128 # MB

        network {
          mbits = 1
          port "http" {}
        }
      }
    }

    task "proxy" {
      driver = "raw_exec"

      config {
        command = "/usr/bin/consul"
        args  = [
          "connect", "proxy",
          "-service", "name",
          "-upstream", "age:${NOMAD_PORT_http}",
        ]
      }

      resources {
        cpu    = 250 # MHz
        memory = 64 # MB

        network {
          port "http" {}
        }
      }
    }

  }
}
